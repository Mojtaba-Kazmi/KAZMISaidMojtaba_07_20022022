{"version":3,"sources":["queryBdd.js"],"names":["connection2","require","module","exports","userCreate","insert","query","userEmailUnique","insertEMail","userLogin","userProfil","userProfilUpdate","userProfilPhoto","userCommentDelete","userMessageDelete","userDelete","discussionSelectAll","discussionSelectOne","discussionDelete","insertId","fileDelete","UserDeleteFile","messageSelectAll","commentDeleteCommentId","fileFind","insertMessageId","messageDelete","commentDeleteMessageId","insertCommentId","messageLike","messageNbLike","messageCommentCreate","commentSelectAll","messageDeleteLike","messageLikeDeleteProfil","insertFirst","discussionDeleteLikeMessage","insert2","messageUserLike","selectIdFromUser","getUserById","insertForDelete","selectMessageForDiscussionDelete","discussionDeleteMessage","fileMessageDeleteUser","userId"],"mappings":"aACA,IAAMA,YAAcC,QAAQ,wBAE5BC,OAAOC,QAAU,CACbC,WAAA,SAAAC,GACAD,OAAYJ,YAAAM,MAAA,+EAAiBD,IAK7BE,gBAAiB,SAAAC,GACb,OAAOR,YAAYM,MAAM,yCAA0CE,IAKnEC,UAAOT,SAAYM,GAbV,OAAAN,YAAAM,MAAA,sCAAAD,IAAAK,WAAA,SAAAL,GAqBb,OAAAL,YAAAM,MAAA,qDAAAD,IAKAM,iBAAA,SAAAN,GACAO,OAAAA,YAAiBN,MAAA,qCAAiBD,IAKlCQ,gBAAkB,SAAAR,GACd,OAAOL,YAAAM,MAAA,sCAAPD,IAKAQ,kBAAO,WAtCE,MAAA,yCAAAC,kBAAA,WA8Cb,MAAA,yCAKAC,WAAA,SAAAV,GACAW,OAAAA,YAAqBV,MAAA,8BAAWD,IAKhCY,iBAAmB,SAAEZ,GACjB,OAAOL,YAAYM,MAAM,qDAAzBD,IAKAW,oBAAmBV,WA/DV,OAAAN,YAAAM,MAAA,oCAAAW,oBAAA,SAAAZ,GAuEb,OAAAL,YAAAM,MAAA,0CAAAD,IAKAa,iBAAA,SAAAC,GACAC,OAAYpB,YAAAM,MAAA,oCAAiBa,IAK7BE,cAAgB,SAAAhB,GACZ,OAAOL,YAAAM,MAAA,uFAAPD,IAKAiB,iBAAkB,SAAOjB,GAxFhB,OAAAL,YAAAM,MAAA,0TAAAD,IAAAe,WAAA,SAAAf,GAgGb,OAAAL,YAAAM,MAAA,sCAAAD,IAKAgB,eAAA,WACAE,MAAAA,4CAKAC,0BAAmBnB,SAAQoB,GACvB,OAAOzB,YAAYM,MAAM,yCAAyCD,IAKlEqB,cAAO1B,SAAAyB,GAjHE,OAAAzB,YAAAM,MAAA,iCAAAmB,IAAAE,uBAAA,SAAAtB,GAyHb,OAAAL,YAAAM,MAAA,yCAAAD,IAKAkB,uBAAA,SAAAK,GACAC,OAAa7B,YAAAM,MAAA,iCAAsBsB,IAKnCE,SAAAA,SAAezB,GACX,OAAOL,YAAYM,MAAM,wCAAAD,IAKzB0B,qBAAmBzB,SAAMD,GA1IhB,OAAAL,YAAAM,MAAA,qFAAAD,IAiJb2B,iBAAA,SAAA3B,GACA4B,OAAAA,YAAmB3B,MAAA,kSAA0BD,IAK7C6B,gCAAyB,SAAAN,GACrB,OAAO5B,YAAAM,MAAA,yCAAPsB,IAKAC,YAAO7B,SAAYM,GA7JV,OAAAN,YAAAM,MAAA,qEAAA6B,IAoKbC,cAAAA,SAAAA,GACI,OAAOpC,YAAYM,MAAM,6DAAzB+B,IArKSC,gBAAA,SAAAb,GA4Kbc,OAAAA,YAAkBjC,MAAA,uEAAiBmB,IAInCe,mBAAa,SAAAC,GACT,OAAOzC,YAAYM,MAAM,sDAAzBmC,IA/BJR,kBAAmB,SAASR,GACxB,OAAOzB,YAAYM,MAAM,uCAAwCmB,IAIrES,wBAAyB,WACrB,MAAO,wCAIXQ,iCAAkC,SAASvB,GACvC,OAAOnB,YAAYM,MAAM,iDAAkDa,IAG/EwB,wBAAyB,SAASxB,GAC9B,OAAOnB,YAAYM,MAAM,8CAA+Ca,IAG5EiB,4BAA4B,SAAU/B,GAClC,OAAOL,YAAYM,MAAM,wCAAyCD,IAGtEuC,sBAAuB,SAAUvC,GAC7B,OAAOL,YAAYM,MAAM,6CAA8CD,IAG3EkC,iBAAkB,SAASlC,GACvB,OAAOL,YAAYM,MAAM,iCAAkCD,IAG/DmC,YAAa,SAASK,GAClB,OAAO7C,YAAYM,MAAM,gCAAiCuC","file":"queryBdd.min.js","sourcesContent":["\nconst connection2 = require('./connexionDatabase2');\n\nmodule.exports = {\n    //création d'un user\n    userCreate: function(insert) {\n        return connection2.query('INSERT INTO User(name, firstName, email, password, photo) VALUES (?,?,?,?,?)', insert);\n    },\n\n    //vérification email unique\n    userEmailUnique: function(insertEMail) {\n        return connection2.query('SELECT email FROM User WHERE email = ?', insertEMail);\n    },\n\n    //récupération d'un utilisateur pour le login\n    userLogin: function(insert) {\n        return connection2.query('SELECT * FROM User WHERE email = ? ', insert);\n    },\n\n    //récupération d'un utilisateur pour le profil\n    userProfil: function(insert) {\n        return connection2.query('SELECT name, firstName, photo FROM User WHERE id=?', insert);\n    },\n\n    //mise à jour de la photo de profil\n    userProfilUpdate: function(insert) {\n        return connection2.query('UPDATE User SET photo=? WHERE id=?', insert);\n    },\n\n    //récupération de la photo de profil\n    userProfilPhoto: function(insert) {\n        return connection2.query('SELECT photo FROM User WHERE id = ?', insert);\n    },\n\n    //supprime les commentaires liés à un utilisateur\n    userCommentDelete:function() {\n        return 'DELETE FROM Comment WHERE user_id = ?'\n    },\n\n    //supprime les messages liés à un utilisateur\n    userMessageDelete:function() {\n        return 'DELETE FROM Message WHERE user_id = ?'\n    },\n\n    //supprime l'utilisateur\n    userDelete:function(insert) {\n        return connection2.query('DELETE FROM User WHERE id=?', insert);\n    },\n\n    //creation de la discussion\n    discussionCreate: function(insert) {\n        return connection2.query('INSERT INTO Discussion(user_id,title) VALUES (?,?)', insert);\n    },\n\n    // récupération de toutes les discussions\n    discussionSelectAll: function() {\n        return connection2.query('SELECT title,id FROM Discussion');\n    },\n\n    // récupération d'une discussion\n    discussionSelectOne: function(insert) {\n        return connection2.query('SELECT title FROM Discussion WHERE id=?', insert);\n    },\n\n    // supression d'une discussion\n    discussionDelete: function(insertId) {\n        return connection2.query('DELETE FROM Discussion WHERE id=?', insertId);\n    },\n\n    //création d'un message\n    messageCreate: function(insert) {\n        return connection2.query('INSERT INTO Message(user_id,discussion_id,text_message,date,file) VALUES (?,?,?,?,?)', insert);\n    },\n\n    //récupération de tous les messages\n    messageSelectAll: function(insert) {\n        return connection2.query('SELECT Message.text_message, User.name, User.firstName, User.photo, Discussion.title, Discussion.id, Message.date, Message.id, Message.file FROM Message INNER JOIN Discussion ON Message.discussion_id = Discussion.id INNER JOIN User ON Message.user_id = User.id WHERE Discussion.id = ? ORDER BY Message.date DESC', insert);\n    },\n\n    //supression d'un fichier à partir de l'id du message\n    fileDelete: function(insert) {\n        return connection2.query('SELECT file FROM Message WHERE id=?', insert);\n    },\n\n    //supression d'un fichier à partir de l'id du message\n    UserDeleteFile: function() {\n        return 'SELECT file FROM Message WHERE user_id=?'\n    },\n\n    //Vérification du userId avant de supprimer un message\n    messageUserIdBeforeDelete: function(insertMessageId) {\n        return connection2.query('SELECT user_id FROM Message WHERE id=?', insertMessageId);\n    },\n\n    //Supression d'un message\n    messageDelete: function(insertMessageId) {\n        return connection2.query('DELETE FROM Message WHERE id=?', insertMessageId);\n    },\n\n    //suppression d'un commentaire a partir du message_id\n    commentDeleteMessageId: function(insert) {\n        return connection2.query('DELETE FROM Comment WHERE message_id=?', insert);\n    },\n\n    //suppression d'un commentaire à partir de l'id du commentaire\n    commentDeleteCommentId: function(insertCommentId) {\n        return connection2.query('DELETE FROM Comment WHERE id=?', insertCommentId);\n    },\n\n    //récupération d'un fichier\n    fileFind: function(insert) {\n        return connection2.query('SELECT file FROM Message WHERE id = ?', insert);\n    },\n\n    //création d'un commentaire sur un message\n    messageCommentCreate: function(insert) {\n        return connection2.query('INSERT INTO Comment(user_id,message_id,text_comment,date_comment) VALUES (?,?,?,?)', insert)\n    },\n\n    //récupération des commentaires pour un message\n    commentSelectAll: function(insert) {\n        return connection2.query('SELECT Comment.text_comment, User.name, User.firstName, Comment.date_comment, Comment.message_id, Comment.id, User.photo FROM Comment INNER JOIN Message ON Comment.message_id = Message.id INNER JOIN User ON Comment.user_id = User.id WHERE Message.id = ? ORDER BY Comment.date_comment ASC', insert)\n    },\n\n    //Vérification de l'utilisateur avant la suppression d'un message\n    commentSelectUserIdBeforeDelete: function(insertCommentId) {\n        return connection2.query('SELECT user_id FROM Comment WHERE id=?', insertCommentId); \n    },\n\n    //insertion d'un utilisateur qui aime un message\n    messageLike: function(insertFirst) {\n        return connection2.query('INSERT INTO Liked(user_id, message_id, liked_date) VALUES(?, ?, ?)', insertFirst);\n    },\n\n    //Compte le nombre d elike pour un message\n    messageNbLike: function(insert2) {\n        return connection2.query('SELECT COUNT(*) AS nb_like FROM Liked WHERE message_id = ?', insert2);\n    },\n\n    //Selectionne l'id de l'utilisateur qui aime un message\n    messageUserLike: function(insertMessageId) {\n        return connection2.query('SELECT * FROM Liked WHERE Liked.user_id = ? AND Liked.message_id = ?',insertMessageId);\n    },\n\n    messageUserDislike:function(insertForDelete) {\n        return connection2.query('DELETE FROM Liked WHERE user_id=? AND message_id= ?', insertForDelete);\n    },\n\n    //Supression des likes pour un message_id\n    messageDeleteLike: function(insertMessageId) {\n        return connection2.query('DELETE FROM Liked WHERE message_id=?', insertMessageId);\n    },\n\n    //Suppression des likes lors de la supression du profil\n    messageLikeDeleteProfil: function() {\n        return 'DELETE FROM Liked WHERE  user_id = ?'\n    },\n\n    //Sélection des id de messages en fonction de la discussion\n    selectMessageForDiscussionDelete: function(insertId) {\n        return connection2.query('SELECT id FROM Message WHERE discussion_id = ?', insertId);\n    },\n\n    discussionDeleteMessage: function(insertId) {\n        return connection2.query('DELETE FROM Message WHERE discussion_id = ?', insertId);\n    },\n\n    discussionDeleteLikeMessage:function (insert) {\n        return connection2.query('DELETE FROM Liked WHERE message_id= ?', insert);\n    },\n\n    fileMessageDeleteUser: function (insert) {\n        return connection2.query('SELECT file FROM Message WHERE user_id = ?', insert);\n    },\n\n    selectIdFromUser: function(insert) {\n        return connection2.query('SELECT id FROM User WHERE id=?', insert);\n    },\n\n    getUserById: function(userId) {\n        return connection2.query('SELECT * FROM User WHERE id=?', userId);\n    }\n}\n"]}