{"version":3,"sources":["discussion.js"],"names":["fs","require","queryDbb","exports","createDiscussion","req","res","next","userId","user","title","body","insert","discussionCreate","result","status","json","error","getAllDiscussion","discussionSelectAll","getOneDiscussion","id","params","discussionSelectOne","deleteDiscussion","isAdmin","userIsAdmin","insertId","deleteId","selectMessageForDiscussionDelete","messageIds","i","length","fileFind","queryStringFindFile","file","filename","split","unlinkSync","commentDeleteMessageId","discussionDeleteLikeMessage","discussionDeleteMessage","discussionDelete","dltEmptyDiscussion","createMessage","message","text_message","discussionId","date","Date","protocol","get","messageCreate","getAllMessage","messageSelectAll","insert2","messageNbLike","nb_like","nbLike","deleteMessage","messageId","insertMessageId","messageUserIdBeforeDelete","user_id","messageDeleteLike","queryStringFile","messageDelete","likeMessage","message_id","insertFirst","insertForDelete","messageUserLike","resultUser","messageUserDislike","messageLike","commentMessage","comment","text_comment","messageCommentCreate","getComment","commentSelectAll","deleteComment","commentId","insertCommentId","commentSelectUserIdBeforeDelete","commentDeleteCommentId"],"mappings":"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","sourcesContent":["const fs = require('fs');\nconst queryDbb = require('../queryBdd');\n\n//Création d'une discussion\nexports.createDiscussion = async (req, res, next) => {\n  const userId = req.user;\n  const title = req.body.title;\n  const insert = [userId, title];\n\n  const result = await queryDbb.discussionCreate(insert);\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//récupération de toutes les discussion\nexports.getAllDiscussion = async (req, res, next) => {\n\n  const result = await queryDbb.discussionSelectAll();\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//récupération d'une discussion par son id\nexports.getOneDiscussion = async (req, res, next) => {\n  const id = req.params.id;\n  const insert = [id];\n\n  const result = await queryDbb.discussionSelectOne(insert);\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//suppression d'une discussion \nexports.deleteDiscussion = async (req, res, next) => {\n\n  const id = req.params.id;\n  const userId = req.user;\n  const isAdmin = req.userIsAdmin;\n  const title = req.body.title;\n  const insertId = [id];\n  const deleteId = [id,userId];\n  \n\n  if (isAdmin == 1) {\n    \n    //je récupère tous les id des messages de la discussion\n    const messageIds = await queryDbb.selectMessageForDiscussionDelete(insertId);\n\n    for (let i = 0; i < messageIds.length; i++) {\n \n      const insert = [messageIds[i].id];\n     \n      let queryStringFindFile = await queryDbb.fileFind(insert);\n\n      if (queryStringFindFile[0].file !== null) {\n        const filename = queryStringFindFile[0].file.split('/images/')[1];\n        fs.unlinkSync(`./images/${filename}`);\n      }\n    \n      try {\n\n        await queryDbb.commentDeleteMessageId(insert);\n        await queryDbb.discussionDeleteLikeMessage(insert);\n        await queryDbb.discussionDeleteMessage(insertId);\n        await queryDbb.discussionDelete(deleteId);\n        \n      } catch ( err ) {\n        return res.status(500).json({ error: \"mysql2\" });\n      }\n    }\n    \n    const dltEmptyDiscussion = await queryDbb.discussionDelete(deleteId);\n    return res.status(200).json(\"Discussion supprimée\");\n\n  } else {\n    //Si l'utilisateur n'est pas admin\n    return res.status(400).json({error: \"Vous n'êtes pas autorisé à supprimer cette discussion\"});\n  }\n    \n};\n\n//création d'un message\nexports.createMessage = async (req, res, next) => {\n  const userId = req.user;\n  const message = req.body.text_message;\n  const discussionId = req.body.discussionId;\n  const date = new Date();\n  \n  let file = null\n\n  if (req.file) {\n      file = `${req.protocol}://${req.get('host')}/images/${req.file.filename}`\n  }\n\n  const insert = [userId, discussionId, message, date, file];\n\n  const result = await queryDbb.messageCreate(insert);\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//récupération de tous les messages\nexports.getAllMessage = async (req, res, next) => {\n  const discussionId = req.params.id;\n  const insert = [discussionId];\n\n  const result = await queryDbb.messageSelectAll(insert);\n  \n    for (let i=0; i < result.length; i++) {\n      let insert2 = [result[i].id];\n      const nb_like = await queryDbb.messageNbLike(insert2);\n\n      try {\n        result[i].nbLike = nb_like[0].nb_like;\n      } catch (err) {\n        return res.status(500).json({ error: error });\n      }\n    } \n    return res.status(200).json(result);\n    \n  \n};\n\n//suppression d'un message \nexports.deleteMessage = async (req, res, next) => {\n  const userId = req.user;\n  const messageId = req.body.id;\n  const isAdmin = req.userIsAdmin;\n  const insertMessageId = [messageId];\n\n  //1 On vérifie que l'utilisateur correspond à l'utilisateur qui a posté le message ou qu'il est admin\n  const result = await queryDbb.messageUserIdBeforeDelete(insertMessageId);\n  \n  \n  try {\n    //Si l'utilisateur n'est pas celui qui a posté le message, on renvoie une erreur pour lui dire qu'il ne peut pas supprimer le message\n    if (result[0].user_id != userId && isAdmin == 0) {\n      return res.status(400).json({message: \"Vous ne pouvez pas supprimer ce message !\"});\n    }\n\n    await queryDbb.commentDeleteMessageId(insertMessageId);\n    await queryDbb.messageDeleteLike(insertMessageId);\n\n    const queryStringFile = await queryDbb.fileFind(insertMessageId);\n    if (queryStringFile[0].file !== null) {\n      const filename = queryStringFile[0].file.split('/images/')[1];\n      fs.unlinkSync(`./images/${filename}`);              \n    }\n    \n    await queryDbb.messageDelete(insertMessageId);\n\n    return res.status(200).json({\"message\": \"Message supprimé\"});\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n    \n};\n\n//Insertion d'un like\nexports.likeMessage = async (req, res, next) => {\n  const userId = req.user\n  const messageId = req.body.message_id;\n  const date = new Date();\n  const insertFirst = [userId, messageId, date];\n  const insertMessageId = [userId, messageId];\n  const insertForDelete = [userId, messageId];\n\n\n  const resultUser = await queryDbb.messageUserLike(insertMessageId);\n \n  //on va vérifier si l'utilisateur a déjà aimé le message\n  try {\n      //Si l'utilisateur a déjà aimé le like, on le supprime de la base\n      if (resultUser.length > 0) {\n        await queryDbb.messageUserDislike(insertForDelete);\n        return res.status(200).json({message: \"Like supprimé de la base\"});\n      }\n\n      else {\n        //si non on l'ajoute à la base\n        const result = await queryDbb.messageLike(insertFirst);\n        return res.status(200).json(result);\n      }\n  } catch ( err ) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n}\n\n\n//création d'un commentaire\nexports.commentMessage = async (req, res, next) => {\n  const userId = req.user\n  const messageId = req.body.message_id;\n  const comment = req.body.text_comment;\n  const date = new Date();\n  const insert = [userId, messageId, comment, date]\n\n  const result = await queryDbb.messageCommentCreate(insert);\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//récupérations des commentaires\nexports.getComment = async (req, res, next) => {\n  const userId = req.user\n  const messageId = req.params.id;\n  const insert = [messageId];\n\n  const result = await queryDbb.commentSelectAll(insert);\n  try {\n    return res.status(200).json(result);\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};\n\n//suppression d'un commentaire \nexports.deleteComment = async (req, res, next) => {\n  const userId = req.user\n  const commentId = req.body.id;\n  const isAdmin = req.userIsAdmin;\n  const insertCommentId = [commentId];\n  \n  const result = await queryDbb.commentSelectUserIdBeforeDelete(insertCommentId);\n  \n  // On vérifie que l'utilisateur est celui qui a posté le commentaire ou qu'il est admin\n  if (result[0].user_id != userId && isAdmin == 0) {\n    return res.status(400).json({message: \"Vous ne pouvez pas supprimer ce commentaire !\"});\n  }\n  try {\n    await queryDbb.commentDeleteCommentId(insertCommentId);\n    return res.status(200).json({message: \"Commentaire supprimé\"});\n  } catch (err) {\n    return res.status(500).json({ error: \"mysql2\" });\n  }\n};"],"file":"discussion.dev.js"}